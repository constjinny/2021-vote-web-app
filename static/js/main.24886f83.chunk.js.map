{"version":3,"sources":["api/sample.api.ts","assets/images/imageList.ts","assets/images/jinny_profile.png","assets/images/owl_profile.png","data/sample.data.ts","features/layout/Header.tsx","features/layout/Contents.tsx","features/layout/Footer.tsx","components/button/types.ts","utils/sort.ts","utils/unique.ts","features/voteList/VoteList.parser.ts","features/voteList/VoteListSlice.ts","components/button/Button.tsx","features/voteList/VoteDetail.tsx","features/voteList/VoteResult.tsx","components/tag/Tag.tsx","components/profile/Profile.tsx","features/voteList/VoteList.tsx","features/voteList/VoteListPage.tsx","features/voteWrite/VoteWriteSlice.ts","features/voteWrite/VoteWrite.parser.ts","components/input/Input.tsx","features/voteWrite/VoteWrite.tsx","features/voteWrite/VoteWritePage.tsx","routes/Routes.tsx","core/App.tsx","core/store.ts","index.js"],"names":["DataType","UserProfile","jinny","owl","toDate","dayjs","second","millisecond","DummyData","user","id","nick_name","profile_url","vote","author","open_date","subtract","valueOf","close_date","vote_id","vote_name","vote_options","option_id","option_value","selected_ids","add","getVotes","getData","sessionStorage","getItem","VOTE_DATA","JSON","parse","CommAPI","setItem","USER_DATA","stringify","UserAPI","VoteAPI","newVote","updated","map","find","parsed","voteId","filtered","filter","data","userId","optionId","updateData","updateVoteOptions","option","Header","HeaderWrapStyle","to","styled","header","Contents","children","ContentsWrapStyle","main","Footer","FooterWrapStyle","href","target","rel","ButtonTheme","footer","SortUtil","list","orderName","orders","ordersValue","_","orderBy","value","UniqueUtil","Math","random","toString","substr","VoteListParser","votesData","toData","length","filterAuthor","nickName","profileUrl","isOpen","isEdit","isClose","filterVoteOptions","optionValue","selectedIds","count","resultOptionId","isSelectId","isResultId","openDate","format","closeDate","voteName","voteOptions","VoteListSlice","createSlice","name","initialState","voteList","reducers","getLoadData","state","userData","updateVoteOptionCount","action","updateVoteData","payload","deleteVote","voteListAction","actions","voteListReducer","reducer","voteListSelector","ButtonThemeStyle","Default","css","Full","Button","theme","isDisabled","onClick","themeStyle","ButtonStyle","type","disabled","defaultProps","button","VoteDetail","dispatch","useDispatch","useSelector","useState","selectValueId","setSelectValueId","Description","VoteDetailStyle","OptionListStyle","index","isSelect","isEmpty","OptionStyle","ButtonGroupStyle","div","ul","li","VoteResult","isResult","SelectedIdList","SelectedIdsStyle","Tag","text","isOn","TagStyle","span","Profile","url","ProfileStyle","src","alt","VoteList","push","useHistory","openId","setOpenId","votes","VoteListStyle","isDetailOpen","voteTag","ItemWrapStyle","ItemInfoGroupStyle","ItemInfoStyle","VoteListPage","hasVotes","useEffect","initialVoteWrite","voteData","isError","isSaved","VoteWriteSlice","getVoteData","VoteWriteParser","setVoteData","saveVoteData","isModify","hasValues","Object","values","hasOptions","changeOptons","VoteWriteToAPIParser","updateVoteName","updateVoteOpenDate","updateVoteCloseDate","addOptionsDate","newOptions","updateOptionsDate","updateIndex","updateOptions","deleteOptionsDate","deleteIndex","voteWriteAction","voteWriteReducer","voteWriteSelector","Input","placeholder","onChange","min","InputStyle","event","input","VoteWrite","VoteWriteStyle","minLength","VoteOptionStyle","handleUpdateVoteOptions","handledeleteVoteOptions","VoteWritePage","modifyId","useParams","isUndefined","setModifyData","useCallback","setInitData","history","createBrowserHistory","basename","process","Routes","path","exact","component","App","WrapStyle","rootReducer","combineReducers","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24886f83.chunk.js","sourcesContent":["import DummyData from \"../data/sample.data\";\nimport { IVotesAPIProps, IVoteOptionAPIProps } from \"./type\";\n\nenum DataType {\n  USER_DATA = \"user_data\",\n  VOTE_DATA = \"vote_data\",\n}\n\nconst setInitData = () => {\n  sessionStorage.setItem(DataType.USER_DATA, JSON.stringify(DummyData.user));\n  sessionStorage.setItem(DataType.VOTE_DATA, JSON.stringify(DummyData.vote));\n};\n\nconst getUser = () => {\n  const getData = sessionStorage.getItem(DataType.USER_DATA);\n  if (getData) {\n    const parsed = JSON.parse(getData);\n    return parsed;\n  }\n  return null;\n};\n\nconst getVotes = () => {\n  const getData = sessionStorage.getItem(DataType.VOTE_DATA);\n  if (getData) {\n    const parsed = JSON.parse(getData);\n    return parsed;\n  }\n  return null;\n};\n\nconst updateVotes = (newVote: IVotesAPIProps) => {\n  const { vote_id } = newVote;\n  const getData = sessionStorage.getItem(DataType.VOTE_DATA);\n  if (getData) {\n    const parsed = JSON.parse(getData);\n    const updated = parsed.map((vote: any) => {\n      if (vote.vote_id === vote_id) {\n        return newVote;\n      } else {\n        return vote;\n      }\n    });\n\n    sessionStorage.setItem(DataType.VOTE_DATA, JSON.stringify(updated));\n\n    const getUpdateData = getVotes();\n    return getUpdateData;\n  }\n  return null;\n};\n\nconst getVoteItem = (id: string) => {\n  const getData = sessionStorage.getItem(DataType.VOTE_DATA);\n  if (getData) {\n    const parsed = JSON.parse(getData);\n    const filtered = parsed.find((vote: IVotesAPIProps) => vote.vote_id === id);\n    return filtered;\n  }\n  return null;\n};\n\nconst addVoteItem = (newVote: IVotesAPIProps) => {\n  const getData = sessionStorage.getItem(DataType.VOTE_DATA);\n  if (getData) {\n    const parsed = JSON.parse(getData);\n    const updated = [...parsed, newVote];\n\n    sessionStorage.setItem(DataType.VOTE_DATA, JSON.stringify(updated));\n\n    const getUpdateData = getVotes();\n    return getUpdateData;\n  }\n  return null;\n};\n\nconst deleteVoteItem = (voteId: string) => {\n  const getData = sessionStorage.getItem(DataType.VOTE_DATA);\n  if (getData) {\n    const parsed = JSON.parse(getData);\n    const filtered = parsed.filter(\n      (vote: IVotesAPIProps) => vote.vote_id !== voteId\n    );\n\n    sessionStorage.setItem(DataType.VOTE_DATA, JSON.stringify(filtered));\n\n    const getUpdateData = getVotes();\n    return getUpdateData;\n  }\n  return null;\n};\n\nconst updateVoteOptionCount = (data: {\n  userId: string;\n  voteId: string;\n  optionId: string;\n}) => {\n  if (data) {\n    const { userId, voteId, optionId } = data;\n    const getData = getVotes();\n\n    const updateData = getData.map((vote: IVotesAPIProps) => {\n      const { vote_id, vote_options } = vote;\n\n      if (vote_id === voteId) {\n        const updateVoteOptions = vote_options.map(\n          (option: IVoteOptionAPIProps) => {\n            const { option_id, selected_ids } = option;\n            if (option_id === optionId) {\n              return { ...option, selected_ids: [...selected_ids, userId] };\n            } else {\n              return option;\n            }\n          }\n        );\n        return { ...vote, vote_options: updateVoteOptions };\n      } else {\n        return vote;\n      }\n    });\n\n    sessionStorage.setItem(DataType.VOTE_DATA, JSON.stringify(updateData));\n\n    const getUpdateData = getVotes();\n    return getUpdateData;\n  }\n  return null;\n};\n\nconst CommAPI = { setInitData };\nconst UserAPI = { getUser };\nconst VoteAPI = {\n  getVotes,\n  updateVotes,\n  getVoteItem,\n  addVoteItem,\n  deleteVoteItem,\n  updateVoteOptionCount,\n};\n\nexport { CommAPI, UserAPI, VoteAPI };\n","import jinny from \"./jinny_profile.png\";\nimport owl from \"./owl_profile.png\";\n\nconst UserProfile = {\n  jinny,\n  owl,\n};\n\nexport default UserProfile;\n","export default __webpack_public_path__ + \"static/media/jinny_profile.7349a196.png\";","export default __webpack_public_path__ + \"static/media/owl_profile.75b5bbe4.png\";","import dayjs from \"dayjs\";\nimport UserProfile from \"../assets/images/imageList\";\n\nconst toDate = dayjs().second(0).millisecond(0);\n\nconst DummyData = {\n  user: {\n    id: \"jinny\",\n    nick_name: \"jinny\",\n    profile_url: UserProfile.jinny,\n  },\n  vote: [\n    {\n      author: {\n        id: \"owl\",\n        nick_name: \"부엉님\",\n        profile_url: UserProfile.owl,\n      },\n      open_date: toDate.subtract(96, \"hour\").valueOf(),\n      close_date: toDate.subtract(72, \"hour\").valueOf(),\n      vote_id: \"ca23065fe7\",\n      vote_name: \"신규 프로젝트의 회의 참석여부 선택해주세요.\",\n      vote_options: [\n        {\n          option_id: \"ca23065fe7-item1\",\n          option_value: \"참석\",\n          selected_ids: [\n            \"jinny\",\n            \"owl\",\n            \"user1\",\n            \"user2\",\n            \"user3\",\n            \"user4\",\n            \"user5\",\n            \"user6\",\n            \"user7\",\n          ],\n        },\n        {\n          option_id: \"ca23065fe7-item2\",\n          option_value: \"미참석\",\n          selected_ids: [\"user8\"],\n        },\n      ],\n    },\n    {\n      author: {\n        id: \"owl\",\n        nick_name: \"부엉님\",\n        profile_url: UserProfile.owl,\n      },\n      open_date: toDate.subtract(48, \"hour\").valueOf(),\n      close_date: toDate.add(24, \"hour\").valueOf(),\n      vote_id: \"a830191fde\",\n      vote_name: \"먹고싶은 회식 메뉴는?\",\n      vote_options: [\n        {\n          option_id: \"a830191fde-item1\",\n          option_value: \"김치찌개\",\n          selected_ids: [\"jinny\"],\n        },\n        {\n          option_id: \"a830191fde-item2\",\n          option_value: \"된장찌개\",\n          selected_ids: [\"owl\", \"user1\", \"user2\"],\n        },\n        {\n          option_id: \"a830191fde-item3\",\n          option_value: \"부대찌개\",\n          selected_ids: [\"user3\"],\n        },\n      ],\n    },\n    {\n      author: {\n        id: \"jinny\",\n        nick_name: \"jinny\",\n        profile_url: UserProfile.jinny,\n      },\n      open_date: toDate.valueOf(),\n      close_date: toDate.add(120, \"hour\").valueOf(),\n      vote_id: \"a830191fdi\",\n      vote_name: \"내일 오전 회의 시간 투표합니다.\",\n      vote_options: [\n        {\n          option_id: \"a830191fdi-item1\",\n          option_value: \"오전 9시\",\n          selected_ids: [\"user3\", \"user4\", \"user5\", \"user6\", \"user7\", \"user8\"],\n        },\n        {\n          option_id: \"a830191fdi-item2\",\n          option_value: \"오전 10시\",\n          selected_ids: [\"owl\", \"user1\", \"user2\"],\n        },\n        {\n          option_id: \"a830191fdi-item3\",\n          option_value: \"오전 11시\",\n          selected_ids: [],\n        },\n      ],\n    },\n    {\n      author: {\n        id: \"jinny\",\n        nick_name: \"jinny\",\n        profile_url: UserProfile.jinny,\n      },\n      open_date: toDate.add(240, \"hour\").valueOf(),\n      close_date: toDate.add(264, \"hour\").valueOf(),\n      vote_id: \"b830191fdi\",\n      vote_name: \"프로그램에 대한 만족도 조사\",\n      vote_options: [\n        {\n          option_id: \"b830191fdi-item1\",\n          option_value: \"매우 만족\",\n          selected_ids: [],\n        },\n        {\n          option_id: \"b830191fdi-item2\",\n          option_value: \"만족\",\n          selected_ids: [],\n        },\n        {\n          option_id: \"b830191fdi-item3\",\n          option_value: \"보통\",\n          selected_ids: [],\n        },\n        {\n          option_id: \"b830191fdi-item4\",\n          option_value: \"불만족\",\n          selected_ids: [],\n        },\n        {\n          option_id: \"b830191fdi-item5\",\n          option_value: \"매우 불만족\",\n          selected_ids: [],\n        },\n      ],\n    },\n  ],\n};\n\nexport default DummyData;\n","import { ReactElement } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"@emotion/styled\";\n\nexport function Header(): ReactElement {\n  return (\n    <HeaderWrapStyle>\n      <h1>\n        <Link to=\"/\">VOTE WEB APP</Link>\n      </h1>\n    </HeaderWrapStyle>\n  );\n}\n\nconst HeaderWrapStyle = styled.header`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 50px;\n  padding: 0 20px;\n  box-sizing: border-box;\n  border-bottom: 1px solid #cacaca;\n  background: #fff;\n  > h1 {\n    font-weight: bold;\n  }\n`;\n","import { ReactElement } from \"react\";\nimport styled from \"@emotion/styled\";\n\ninterface IContentsProps {\n  children: ReactElement;\n}\n\nexport function Contents({ children }: IContentsProps) {\n  return <ContentsWrapStyle>{children}</ContentsWrapStyle>;\n}\n\nconst ContentsWrapStyle = styled.main`\n  overflow-y: auto;\n  max-width: 1200px;\n  height: calc(100vh - 102px);\n  margin: 0 auto;\n  padding: 20px 50px;\n  box-sizing: border-box;\n`;\n","import { ReactElement } from \"react\";\nimport styled from \"@emotion/styled\";\n\nexport function Footer(): ReactElement {\n  return (\n    <FooterWrapStyle>\n      <a\n        href=\"https://github.com/constjinny/2021-vote-web-app\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        view github\n      </a>\n    </FooterWrapStyle>\n  );\n}\n\nconst FooterWrapStyle = styled.footer`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 50px;\n  padding: 0 20px;\n  border-top: 1px solid #cacaca;\n  background: #fff;\n`;\n","import { css } from \"@emotion/react\";\n\nexport interface IButtonProps {\n  theme: ButtonTheme;\n  children?: any;\n  isDisabled: boolean;\n  onClick: (any: any) => any;\n}\n\nexport interface ButtonStyleProps {\n  themeStyle: string;\n}\n\nexport enum ButtonTheme {\n  Default = \"DEFAULT\",\n  Full = \"FULL\",\n}\n\nexport const ButtonThemeStyle: { [index: string]: any } = {\n  [ButtonTheme.Default]: css`\n    width: 100px;\n    height: 30px;\n  `,\n  [ButtonTheme.Full]: css`\n    width: 100%;\n    height: 40px;\n  `,\n};\n","import _ from \"lodash\";\n\nconst sortedOderValue = (list: any[], orderName: string, orders: boolean) => {\n  const ordersValue = orders ? \"asc\" : \"desc\";\n  return _(list)?.orderBy(orderName, ordersValue).value();\n};\n\nexport const SortUtil = { sortedOderValue };\n","const UniqueString = (): string =>\n  (Math.random().toString(16) + \"0000000\").substr(2, 10);\n\nexport const UniqueUtil = { UniqueString };\n","import dayjs from \"dayjs\";\n\nimport {\n  IVoteListAPIProps,\n  IVotesAPIProps,\n  IVoteOptionAPIProps,\n} from \"../../api/type\";\nimport { SortUtil } from \"../../utils\";\n\nconst VoteListParser = ({ userId, votesData }: IVoteListAPIProps) => {\n  const toData = dayjs().valueOf();\n\n  if (votesData && votesData.length > 0) {\n    const sortVotesData = SortUtil.sortedOderValue(\n      votesData,\n      \"close_date\",\n      false\n    );\n\n    const filterVotesData = sortVotesData.map((vote: IVotesAPIProps) => {\n      const {\n        author,\n        open_date,\n        close_date,\n        vote_id,\n        vote_name,\n        vote_options,\n      } = vote;\n      const { id, nick_name = \"\", profile_url = \"\" } = author;\n\n      const filterAuthor = { id, nickName: nick_name, profileUrl: profile_url };\n      const isOpen = open_date - toData < 0;\n      const isEdit = author.id === userId && !isOpen;\n      const isClose = close_date - toData < 0;\n      const filterVoteOptions = vote_options.map(\n        (option: IVoteOptionAPIProps) => {\n          const {\n            option_id = \"\",\n            option_value = \"\",\n            selected_ids = [],\n          } = option;\n          return {\n            optionId: option_id,\n            optionValue: option_value,\n            selectedIds: selected_ids,\n            count: selected_ids.length,\n          };\n        }\n      );\n      const resultOptionId = isClose\n        ? SortUtil.sortedOderValue(vote_options, \"count\", false)[0]?.option_id\n        : \"\";\n      const checkSelectOptionId = vote_options?.find(\n        (option: IVoteOptionAPIProps) => {\n          const { selected_ids } = option;\n          const checkId = selected_ids.find((id: string) => id === userId);\n          return checkId;\n        }\n      )?.option_id;\n\n      return {\n        author: filterAuthor,\n        isEdit: isEdit || false,\n        isOpen: isOpen || false,\n        isClose: isClose || false,\n        isSelectId: checkSelectOptionId || \"\",\n        isResultId: resultOptionId,\n        openDate: dayjs(open_date).format(\"YYYY년 M월 D일\") || \"\",\n        closeDate: dayjs(close_date).format(\"YYYY년 M월 D일\") || \"\",\n        voteId: vote_id || \"\",\n        voteName: vote_name || \"\",\n        voteOptions: filterVoteOptions || [],\n      };\n    });\n\n    return filterVotesData;\n  }\n  return [];\n};\n\nexport default VoteListParser;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nimport VoteListParser from \"./VoteList.parser\";\nimport { IVoteListStateProps } from \"./type\";\nimport { IRootState } from \"../../core/store\";\nimport { UserAPI, VoteAPI } from \"../../api/sample.api\";\n\nconst initialVoteList: IVoteListStateProps = {\n  userId: \"\",\n  voteList: [],\n};\n\nexport const VoteListSlice = createSlice({\n  name: \"voteList\",\n  initialState: initialVoteList,\n  reducers: {\n    // NOTI: 필요한 값을 파서를 통해 추려 사용\n    getLoadData(state) {\n      const userData = UserAPI.getUser();\n      const votesData = VoteAPI.getVotes();\n\n      const parsed = VoteListParser({ userId: userData?.id, votesData });\n\n      if (parsed) {\n        state.userId = userData?.id;\n        state.voteList = parsed;\n      }\n    },\n    updateVoteOptionCount(\n      state,\n      action: PayloadAction<{\n        userId: string;\n        voteId: string;\n        optionId: string;\n      }>\n    ) {\n      const userData = UserAPI.getUser();\n      const updateVoteData = VoteAPI.updateVoteOptionCount(action.payload);\n\n      const parsed = VoteListParser({\n        userId: userData?.id,\n        votesData: updateVoteData,\n      });\n\n      if (parsed) {\n        state.voteList = parsed;\n      }\n    },\n    deleteVote(state, action: PayloadAction<string>) {\n      const userData = UserAPI.getUser();\n      const updateVoteData = VoteAPI.deleteVoteItem(action.payload);\n\n      const parsed = VoteListParser({\n        userId: userData?.id,\n        votesData: updateVoteData,\n      });\n\n      if (parsed) {\n        state.voteList = parsed;\n      }\n    },\n  },\n});\n\nexport const voteListAction = VoteListSlice.actions;\nexport const voteListReducer = VoteListSlice.reducer;\n\nconst selectUserId = (state: IRootState) => state.voteListReducer.userId;\n\nconst selectVoteList = (state: IRootState) => state.voteListReducer.voteList;\n\nexport const voteListSelector = {\n  selectUserId,\n  selectVoteList,\n};\n","import { ReactElement } from \"react\";\nimport styled from \"@emotion/styled\";\nimport {\n  IButtonProps,\n  ButtonStyleProps,\n  ButtonTheme,\n  ButtonThemeStyle,\n} from \"./types\";\n\nexport function Button({\n  theme,\n  children,\n  isDisabled,\n  onClick,\n}: IButtonProps): ReactElement {\n  const themeStyle = ButtonThemeStyle[theme];\n\n  return (\n    <ButtonStyle\n      type=\"button\"\n      disabled={isDisabled}\n      onClick={onClick}\n      themeStyle={themeStyle}\n    >\n      {children && children}\n    </ButtonStyle>\n  );\n}\n\nButton.defaultProps = {\n  theme: ButtonTheme.Default,\n  isDisabled: false,\n};\n\nconst ButtonStyle = styled.button<ButtonStyleProps>`\n  ${({ themeStyle }) => themeStyle};\n  padding: 0;\n  border: 0 none;\n  cursor: pointer;\n  border-radius: 5px;\n  background-color: #5ea9e7;\n  color: #fff;\n  &:hover {\n    box-shadow: rgba(149, 157, 165, 0.9) 0px 5px 10px;\n  }\n  &:disabled {\n    cursor: default;\n    background-color: #8e9daa;\n  }\n`;\n","import { ReactElement, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"@emotion/styled\";\nimport { isEmpty } from \"lodash\";\n\nimport { voteListAction, voteListSelector } from \"./VoteListSlice\";\nimport { IVoteItemProps, IVoteOptionProps } from \"./type\";\nimport { Button, ButtonTheme } from \"../../components/button\";\n\nexport function VoteDetail({ data }: { data: IVoteItemProps }): ReactElement {\n  const dispatch = useDispatch();\n  const userId = useSelector(voteListSelector.selectUserId);\n  const [selectValueId, setSelectValueId] = useState(\"\");\n  const { isOpen, isClose, openDate, voteOptions, isSelectId, voteId } = data;\n\n  const handleResultOption = () =>\n    dispatch(\n      voteListAction.updateVoteOptionCount({\n        userId,\n        voteId,\n        optionId: selectValueId,\n      })\n    );\n\n  const Description = isSelectId ? (\n    <p>🗳 이미 투표를 하셨습니다.</p>\n  ) : !isOpen ? (\n    <p>🗳 {openDate} 부터 투표 가능합니다.</p>\n  ) : null;\n\n  return (\n    <VoteDetailStyle>\n      <OptionListStyle>\n        {Description && Description}\n\n        {voteOptions.map((option: IVoteOptionProps, index: number) => {\n          const { optionId, optionValue, count } = option;\n          const isSelect =\n            optionId === selectValueId || optionId === isSelectId;\n          const isDisabled = !isOpen || isClose || !isEmpty(isSelectId);\n\n          const handleSelectValue = () =>\n            !isDisabled && setSelectValueId(optionId);\n\n          return (\n            <OptionStyle\n              key={optionId}\n              isSelect={isSelect}\n              isDisabled={isDisabled}\n              onClick={handleSelectValue}\n            >\n              <span>{index + 1}</span>\n\n              <div>\n                {optionValue}\n                <span>{`${count} 명`}</span>\n              </div>\n            </OptionStyle>\n          );\n        })}\n      </OptionListStyle>\n\n      {isOpen && !isClose && isEmpty(isSelectId) && (\n        <ButtonGroupStyle>\n          <Button\n            theme={ButtonTheme.Full}\n            onClick={handleResultOption}\n            isDisabled={isEmpty(selectValueId)}\n          >\n            투표하기\n          </Button>\n        </ButtonGroupStyle>\n      )}\n    </VoteDetailStyle>\n  );\n}\n\nconst VoteDetailStyle = styled.div`\n  margin-top: 20px;\n  padding: 20px;\n  border-radius: 5px;\n  border: 1px solid #cacaca;\n  background: #fff;\n  box-sizing: border-box;\n`;\n\nconst OptionListStyle = styled.ul`\n  > p {\n    margin-bottom: 10px;\n  }\n`;\n\nconst OptionStyle = styled.li<{ isSelect: boolean; isDisabled: boolean }>`\n  overflow: hidden;\n  position: relative;\n  margin-top: 10px;\n  padding: 10px 20px 10px 50px;\n  font-size: 14px;\n  border-radius: 5px;\n  border: 1px solid #cacaca;\n  ${({ isSelect }) => isSelect && \"border-color: #5ea9e7\"};\n  ${({ isDisabled }) => isDisabled && \"background-color: #eeeeee;\"};\n  &:hover {\n    ${({ isDisabled }) =>\n      !isDisabled &&\n      \"cursor: pointer; border-color: #457aa7; box-shadow: rgba(149, 157, 165, 0.9) 0px 10px 24px;\"};\n  }\n  > span {\n    position: absolute;\n    top: 10px;\n    left: 20px;\n    width: 20px;\n    height: 20px;\n    text-align: center;\n    font-weight: bold;\n    line-height: 20px;\n    border-radius: 50%;\n    background-color: ${({ isSelect }) => (isSelect ? \"#5ea9e7\" : \"#cacaca\")};\n    color: #fff;\n  }\n  > div {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    > span {\n      display: inline-block;\n    }\n  }\n`;\n\nconst ButtonGroupStyle = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 20px;\n  padding-top: 20px;\n  border-top: 1px solid #cacaca;\n`;\n","import { ReactElement } from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport { IVoteItemProps, IVoteOptionProps } from \"./type\";\n\nexport function VoteResult({ data }: { data: IVoteItemProps }): ReactElement {\n  const { voteOptions, isResultId } = data;\n\n  return (\n    <VoteDetailStyle>\n      <OptionListStyle>\n        {voteOptions.map((option: IVoteOptionProps, index: number) => {\n          const { optionId, optionValue, selectedIds, count } = option;\n          const isResult = isResultId === optionId;\n          const SelectedIdList = selectedIds.map((id: string) => (\n            <span key={id}>{id}</span>\n          ));\n\n          return (\n            <OptionStyle key={optionId} isResult={isResult}>\n              <span>{index + 1}</span>\n\n              <div>\n                {optionValue}\n                <span>{`${count} 명`}</span>\n              </div>\n\n              {SelectedIdList && (\n                <SelectedIdsStyle>{SelectedIdList}</SelectedIdsStyle>\n              )}\n            </OptionStyle>\n          );\n        })}\n      </OptionListStyle>\n    </VoteDetailStyle>\n  );\n}\n\nconst VoteDetailStyle = styled.div`\n  margin-top: 20px;\n  padding: 20px;\n  border-radius: 5px;\n  border: 1px solid #cacaca;\n  box-sizing: border-box;\n`;\n\nconst OptionListStyle = styled.ul`\n  > p {\n    margin-bottom: 10px;\n  }\n`;\n\nconst OptionStyle = styled.li<{ isResult: boolean }>`\n  overflow: hidden;\n  position: relative;\n  margin-top: 10px;\n  padding: 10px 20px 10px 50px;\n  font-size: 14px;\n  border-radius: 5px;\n  border: 1px solid #cacaca;\n  ${({ isResult }) => isResult && \"border-color: #5ea9e7;\"};\n  > span {\n    position: absolute;\n    top: 10px;\n    left: 20px;\n    width: 20px;\n    height: 20px;\n    text-align: center;\n    font-weight: bold;\n    line-height: 20px;\n    border-radius: 50%;\n    background-color: ${({ isResult }) => (isResult ? \"#5ea9e7\" : \"#cacaca\")};\n    color: #fff;\n  }\n  > div {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n\nconst SelectedIdsStyle = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  font-size: 14px;\n  > span {\n    margin: 5px 2px;\n    padding: 1px 5px;\n    border-radius: 5px;\n    background-color: #cacaca;\n    color: #fff;\n  }\n`;\n","import { ReactElement } from \"react\";\nimport styled from \"@emotion/styled\";\n\ninterface ITagProps {\n  text: string;\n  isOn: boolean;\n}\n\nexport function Tag({ text, isOn }: ITagProps): ReactElement {\n  return <TagStyle isOn={isOn}>{text}</TagStyle>;\n}\n\nTag.defaultProps = {\n  isOn: false,\n};\n\nconst TagStyle = styled.span<{ isOn: boolean }>`\n  display: inline-block;\n  margin: 3px 5px 0 0;\n  padding: 2px 5px 0px;\n  font-size: 12px;\n  border-radius: 5px;\n  background-color: ${({ isOn }) => (isOn ? \"#5ea9e7\" : \"#eeeeee\")};\n  color: ${({ isOn }) => (isOn ? \"#fff\" : \"#333\")};\n  vertical-align: top;\n`;\n","import { ReactElement } from \"react\";\nimport styled from \"@emotion/styled\";\n\ninterface IProfileProps {\n  url: string;\n  name: string;\n}\n\nexport function Profile({ url, name }: IProfileProps): ReactElement {\n  return (\n    <ProfileStyle>\n      <span>\n        <img src={url} alt={`${name}의 프로필 사진`} />\n      </span>\n      <em>{name}</em>\n    </ProfileStyle>\n  );\n}\n\nProfile.defaultProps = {\n  isOn: false,\n};\n\nconst ProfileStyle = styled.span`\n  width: 40px;\n  margin-right: 20px;\n  > span {\n    overflow: hidden;\n    display: block;\n    width: 100%;\n    height: 40px;\n    border-radius: 50%;\n    border: 1px solid #cacaca;\n    background-color: #fff;\n    > img {\n      display: block;\n      width: 100%;\n    }\n  }\n  > em {\n    display: block;\n    margin-top: 5px;\n    text-align: center;\n    font-size: 12px;\n  }\n`;\n","import { Fragment, ReactElement, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"@emotion/styled\";\n\nimport { VoteDetail } from \"./VoteDetail\";\nimport { VoteResult } from \"./VoteResult\";\nimport { voteListSelector, voteListAction } from \"./VoteListSlice\";\nimport { IVoteItemProps } from \"./type\";\nimport { Tag } from \"../../components/tag\";\nimport { Profile } from \"../../components/profile\";\nimport { Button } from \"../../components/button\";\n\nexport function VoteList(): ReactElement {\n  const dispatch = useDispatch();\n  const { push } = useHistory();\n  const [openId, setOpenId] = useState(\"\");\n  const votes = useSelector(voteListSelector.selectVoteList);\n\n  const handleOpenId = (id: string) => setOpenId(id);\n\n  return (\n    <VoteListStyle>\n      {votes.map((vote: IVoteItemProps) => {\n        const {\n          author,\n          isEdit,\n          isOpen,\n          isClose,\n          openDate,\n          closeDate,\n          voteId,\n          voteName,\n        } = vote;\n        const isDetailOpen = openId === voteId;\n        const isOn = isOpen && !isClose;\n        const voteTag = isClose ? \"투표 종료\" : isOpen ? \"투표 중\" : \"오픈 전\";\n\n        const handleModifyVote = () => push(`/modify/${voteId}`);\n        const handleDeleteVote = () =>\n          dispatch(voteListAction.deleteVote(voteId));\n\n        return (\n          <ItemWrapStyle key={voteId} onClick={() => handleOpenId(voteId)}>\n            <ItemInfoGroupStyle>\n              <Profile url={author.profileUrl} name={author.nickName} />\n\n              <ItemInfoStyle>\n                <div>\n                  <Tag isOn={isOn} text={voteTag} />\n                  <strong>\n                    {voteName}\n                    <span>{`${openDate} ~ ${closeDate}`}</span>\n                  </strong>\n                </div>\n\n                {isEdit && (\n                  <ButtonGroupStyle>\n                    <Button onClick={handleModifyVote}>투표 수정</Button>\n                    <Button onClick={handleDeleteVote}>투표 삭제</Button>\n                  </ButtonGroupStyle>\n                )}\n              </ItemInfoStyle>\n            </ItemInfoGroupStyle>\n\n            {isDetailOpen && (\n              <Fragment>\n                {isClose ? (\n                  <VoteResult data={vote} />\n                ) : (\n                  <VoteDetail data={vote} />\n                )}\n              </Fragment>\n            )}\n          </ItemWrapStyle>\n        );\n      })}\n    </VoteListStyle>\n  );\n}\n\nconst VoteListStyle = styled.div`\n  > div {\n    margin-top: 20px;\n  }\n`;\n\nconst ItemWrapStyle = styled.div`\n  display: block;\n  padding: 20px;\n  border-radius: 5px;\n  border: 1px solid #cacaca;\n  background: #fff;\n  box-sizing: border-box;\n  &:hover {\n    box-shadow: rgba(149, 157, 165, 0.9) 0px 10px 24px;\n  }\n  & + & {\n    margin-top: 20px;\n  }\n`;\n\nconst ItemInfoGroupStyle = styled.div`\n  display: flex;\n`;\n\nconst ItemInfoStyle = styled.div`\n  flex: 1;\n  position: relative;\n  padding-right: 110px;\n  &:after {\n    display: block;\n    clear: both;\n    content: \"\";\n  }\n  > div {\n    overflow: hidden;\n    position: relative;\n    padding-left: 60px;\n    > span {\n      position: absolute;\n      top: 0;\n      left: 0;\n    }\n    > strong {\n      font-weight: bold;\n      > span {\n        display: block;\n        font-weight: normal;\n        font-size: 12px;\n      }\n    }\n  }\n`;\n\nconst ButtonGroupStyle = styled.span`\n  position: absolute;\n  top: 0;\n  right: 0;\n  > button {\n    display: block;\n  }\n  > button + button {\n    margin-top: 5px;\n  }\n`;\n","import { Fragment, ReactElement, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"@emotion/styled\";\n\nimport { VoteList } from \"./VoteList\";\nimport { voteListAction } from \"./VoteListSlice\";\nimport { voteListSelector } from \"./VoteListSlice\";\nimport { Button } from \"../../components/button\";\n\nexport function VoteListPage(): ReactElement {\n  const { push } = useHistory();\n  const dispatch = useDispatch();\n  const votes = useSelector(voteListSelector.selectVoteList);\n  const hasVotes = votes.length > 0;\n\n  const handleCreateVote = () => push(\"/create\");\n\n  useEffect(() => {\n    // NOTI: VoteListPage 영역 랜더링 시 초기 데이터 로드\n    dispatch(voteListAction.getLoadData());\n  }, [dispatch]);\n\n  return (\n    <Fragment>\n      <ButtonGroupStyle>\n        <Button onClick={handleCreateVote}>신규 투표 생성</Button>\n      </ButtonGroupStyle>\n\n      {hasVotes ? <VoteList /> : <p>투표가 없습니다.</p>}\n    </Fragment>\n  );\n}\n\nconst ButtonGroupStyle = styled.div`\n  text-align: right;\n`;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nimport { IVoteWriteProps } from \"./type\";\nimport { VoteWriteParser, VoteWriteToAPIParser } from \"./VoteWrite.parser\";\nimport { IRootState } from \"../../core/store\";\nimport { UniqueUtil } from \"../../utils/unique\";\nimport { UserAPI, VoteAPI } from \"../../api/sample.api\";\nimport { isEmpty } from \"lodash\";\n\nexport const initialVoteWrite: IVoteWriteProps = {\n  voteData: {\n    openDate: \"\",\n    closeDate: \"\",\n    voteId: UniqueUtil.UniqueString(),\n    voteName: \"\",\n    voteOptions: [\"\", \"\", \"\"],\n  },\n  isError: false,\n  isSaved: false,\n};\n\nexport const VoteWriteSlice = createSlice({\n  name: \"voteWrite\",\n  initialState: initialVoteWrite,\n  reducers: {\n    // NOTI: 수정 타입 때 필요한 데이터를 가져온다.\n    getVoteData(state, action: PayloadAction<{ voteId: string }>) {\n      const { voteId } = action.payload;\n      const voteData = VoteAPI.getVoteItem(voteId);\n\n      const parsed = VoteWriteParser(voteData);\n\n      if (parsed) {\n        state.voteData.openDate = parsed.openDate;\n        state.voteData.closeDate = parsed.closeDate;\n        state.voteData.voteId = parsed.voteId;\n        state.voteData.voteName = parsed.voteName;\n        state.voteData.voteOptions = parsed.voteOptions;\n      }\n    },\n    setVoteData(state) {\n      state.voteData = initialVoteWrite.voteData;\n      state.isError = initialVoteWrite.isError;\n      state.isSaved = initialVoteWrite.isSaved;\n    },\n    saveVoteData(state, action: PayloadAction<{ isModify: boolean }>) {\n      const { isModify } = action.payload;\n\n      const hasValues =\n        Object.values(state.voteData).filter((value: any) => isEmpty(value))\n          ?.length <= 0;\n      const hasOptions =\n        state.voteData.voteOptions.filter((value: any) => isEmpty(value))\n          ?.length <= 0;\n\n      if (hasValues && hasOptions) {\n        const userData = UserAPI.getUser();\n        const parsed = VoteWriteToAPIParser(userData, state.voteData);\n\n        if (parsed) {\n          if (isModify) {\n            VoteAPI.updateVotes(parsed);\n          } else {\n            VoteAPI.addVoteItem(parsed);\n          }\n          state.isSaved = true;\n        } else {\n          state.isError = true;\n        }\n      } else {\n        state.isError = true;\n      }\n    },\n    updateVoteName(state, action: PayloadAction<string>) {\n      state.voteData.voteName = action.payload || \"\";\n    },\n    updateVoteOpenDate(\n      state,\n      action: PayloadAction<{ openDate: string; closeDate?: string }>\n    ) {\n      const { openDate, closeDate } = action.payload;\n      state.voteData.openDate = openDate || \"\";\n      if (closeDate) {\n        state.voteData.closeDate = closeDate || \"\";\n      }\n    },\n    updateVoteCloseDate(state, action: PayloadAction<string>) {\n      state.voteData.closeDate = action.payload || \"\";\n    },\n    addOptionsDate(state) {\n      const newOptions = [...state.voteData.voteOptions, \"\"];\n      state.voteData.voteOptions = newOptions;\n    },\n    updateOptionsDate(\n      state,\n      action: PayloadAction<{ value: string; index: number }>\n    ) {\n      const { value, index: updateIndex } = action.payload;\n      const updateOptions = state.voteData.voteOptions.map(\n        (vote: string, index: number) => {\n          if (index === updateIndex) {\n            return value;\n          } else {\n            return vote;\n          }\n        }\n      );\n      state.voteData.voteOptions = updateOptions;\n    },\n    deleteOptionsDate(state, action: PayloadAction<{ index: number }>) {\n      const { index: deleteIndex } = action.payload;\n      const updateOptions = state.voteData.voteOptions.filter(\n        (_, index: Number) => index !== deleteIndex\n      );\n      state.voteData.voteOptions = updateOptions;\n    },\n  },\n});\n\nexport const voteWriteAction = VoteWriteSlice.actions;\nexport const voteWriteReducer = VoteWriteSlice.reducer;\n\nconst selectVoteData = (state: IRootState) => state.voteWriteReducer.voteData;\n\nconst selectError = (state: IRootState) => state.voteWriteReducer.isError;\n\nconst selectSaved = (state: IRootState) => state.voteWriteReducer.isSaved;\n\nexport const voteWriteSelector = {\n  selectVoteData,\n  selectError,\n  selectSaved,\n};\n","import dayjs from \"dayjs\";\n\nimport { IVoteWriteDetailProps } from \"./type\";\nimport {\n  IAuthorAPIProps,\n  IVotesAPIProps,\n  IVoteOptionAPIProps,\n} from \"../../api/type\";\n\nconst VoteWriteParser = (voteData: IVotesAPIProps) => {\n  if (voteData) {\n    const { open_date, close_date, vote_id, vote_name, vote_options } =\n      voteData;\n\n    const filterVoteOptions = vote_options.map(\n      (option: IVoteOptionAPIProps) => option.option_value\n    );\n\n    return {\n      openDate: dayjs(open_date).format(\"YYYY-MM-DD\"),\n      closeDate: dayjs(close_date).format(\"YYYY-MM-DD\"),\n      voteId: vote_id,\n      voteName: vote_name,\n      voteOptions: filterVoteOptions,\n    };\n  }\n  return null;\n};\n\nconst VoteWriteToAPIParser = (\n  userData: IAuthorAPIProps,\n  voteData: IVoteWriteDetailProps\n) => {\n  if (voteData) {\n    const { openDate, closeDate, voteId, voteName, voteOptions } = voteData;\n\n    const changeOptons = voteOptions.map((option: string, index: number) => {\n      return {\n        option_id: `${voteId}-option${index}`,\n        option_value: option,\n        selected_ids: [],\n      };\n    });\n\n    return {\n      author: userData,\n      open_date: dayjs(openDate).valueOf(),\n      close_date: dayjs(closeDate).valueOf(),\n      vote_id: voteId,\n      vote_name: voteName,\n      vote_options: changeOptons,\n    };\n  }\n  return null;\n};\n\nexport { VoteWriteParser, VoteWriteToAPIParser };\n","import { ReactElement } from \"react\";\nimport styled from \"@emotion/styled\";\n\nexport interface IInputProps {\n  type: string;\n  value?: string;\n  placeholder?: string;\n  min?: string | number;\n  onChange: (value: string) => any;\n}\n\nexport function Input({\n  type,\n  value,\n  placeholder,\n  onChange,\n  min,\n}: IInputProps): ReactElement {\n  return (\n    <InputStyle\n      type={type}\n      value={value}\n      placeholder={placeholder}\n      min={min}\n      onChange={(event) => onChange(event.target.value)}\n    />\n  );\n}\n\nInput.defaultProps = {\n  type: \"text\",\n  value: \"\",\n  placeholder: \"\",\n};\n\nconst InputStyle = styled.input`\n  width: 100%;\n  height: 30px;\n  padding: 0 16px;\n  border: 1px solid #cacaca;\n  cursor: pointer;\n  border-radius: 5px;\n  outline: 0 none;\n  box-sizing: border-box;\n  &:hover {\n    box-shadow: rgba(149, 157, 165, 0.9) 0px 5px 10px;\n  }\n`;\n","import { ReactElement } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"@emotion/styled\";\nimport dayjs from \"dayjs\";\n\nimport { voteWriteSelector, voteWriteAction } from \"./VoteWriteSlice\";\nimport { Input } from \"../../components/input\";\nimport { Button, ButtonTheme } from \"../../components/button\";\n\nexport function VoteWrite(): ReactElement {\n  const dispatch = useDispatch();\n  const voteData = useSelector(voteWriteSelector.selectVoteData);\n  const { closeDate, openDate, voteName, voteOptions } = voteData;\n  const toDate = dayjs().format(\"YYYY-MM-DD\");\n\n  const handleChangeVoteName = (value: string) => {\n    dispatch(voteWriteAction.updateVoteName(value));\n  };\n\n  const handleChangeVoteOpenDate = (value: string) => {\n    const changeClose =\n      closeDate && dayjs(closeDate).valueOf() - dayjs(value).valueOf() <= 0;\n    if (changeClose) {\n      const closeDate = dayjs(value).add(24, \"hour\").format(\"YYYY-MM-DD\");\n      dispatch(\n        voteWriteAction.updateVoteOpenDate({ openDate: value, closeDate })\n      );\n    } else {\n      dispatch(voteWriteAction.updateVoteOpenDate({ openDate: value }));\n    }\n  };\n\n  const handleChangeVoteCloseDate = (value: string) => {\n    dispatch(voteWriteAction.updateVoteCloseDate(value));\n  };\n\n  const handleAddVoteOptions = (value: string) => {\n    dispatch(voteWriteAction.addOptionsDate());\n  };\n\n  const handleUpdateVoteOptions = (value: string, index: number) => {\n    dispatch(voteWriteAction.updateOptionsDate({ value, index }));\n  };\n\n  const handledeleteVoteOptions = (index: number) => {\n    dispatch(voteWriteAction.deleteOptionsDate({ index }));\n  };\n\n  return (\n    <VoteWriteStyle>\n      <dl>\n        <dt>투표 제목</dt>\n        <dd>\n          <Input\n            value={voteName}\n            placeholder={\"투표 제목을 입력하세요.\"}\n            onChange={handleChangeVoteName}\n          />\n        </dd>\n      </dl>\n      <dl>\n        <dt>시작 일자</dt>\n        <dd>\n          <Input\n            type=\"date\"\n            value={openDate || \"\"}\n            placeholder={\"투표 시작 일자를 입력하세요.\"}\n            min={toDate}\n            onChange={handleChangeVoteOpenDate}\n          />\n        </dd>\n      </dl>\n      <dl>\n        <dt>종료 일자</dt>\n        <dd>\n          <Input\n            type=\"date\"\n            value={closeDate || \"\"}\n            placeholder={\"투표 종료 일자를 입력하세요.\"}\n            min={openDate || toDate}\n            onChange={handleChangeVoteCloseDate}\n          />\n        </dd>\n      </dl>\n      <dl>\n        <dt>투표 항목</dt>\n        <dd>\n          <div>\n            {voteOptions.map((option: any, index: number) => {\n              const minLength = voteOptions.length <= 3;\n              return (\n                <VoteOptionStyle key={index}>\n                  <span>{index + 1}</span>\n                  <Input\n                    key={index}\n                    value={option}\n                    placeholder={\"투표 항목을 입력하세요.\"}\n                    onChange={(value: string) =>\n                      handleUpdateVoteOptions(value, index)\n                    }\n                  />\n\n                  <Button\n                    isDisabled={minLength}\n                    onClick={() => handledeleteVoteOptions(index)}\n                  >\n                    삭제\n                  </Button>\n                </VoteOptionStyle>\n              );\n            })}\n          </div>\n          <div>\n            <Button theme={ButtonTheme.Full} onClick={handleAddVoteOptions}>\n              새 항목 추가\n            </Button>\n          </div>\n        </dd>\n      </dl>\n    </VoteWriteStyle>\n  );\n}\n\nconst VoteWriteStyle = styled.div`\n  display: block;\n  margin-top: 20px;\n  padding: 20px;\n  border-radius: 5px;\n  border: 1px solid #cacaca;\n  background: #fff;\n  box-sizing: border-box;\n  > dl {\n    display: flex;\n    > dt {\n      margin-right: 20px;\n      padding-top: 6px;\n      font-size: 14px;\n    }\n    > dd {\n      flex: 1;\n      > div + div {\n        margin-top: 20px;\n      }\n    }\n  }\n  > dl + dl {\n    margin-top: 20px;\n  }\n`;\n\nconst VoteOptionStyle = styled.div`\n  display: flex;\n  & + & {\n    margin-top: 10px;\n  }\n  > span {\n    width: 20px;\n    padding-top: 6px;\n    font-size: 14px;\n  }\n  > input {\n    margin-right: 20px;\n  }\n`;\n","import { Fragment, ReactElement, useCallback, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"@emotion/styled\";\nimport { isUndefined } from \"lodash\";\n\nimport { VoteWrite } from \"./VoteWrite\";\nimport { voteWriteAction, voteWriteSelector } from \"./VoteWriteSlice\";\nimport { Button } from \"../../components/button\";\n\nexport function VoteWritePage(): ReactElement {\n  const { push } = useHistory();\n  const dispatch = useDispatch();\n  const { vote_id: modifyId } = useParams<{ vote_id: string }>();\n  const isModify = !isUndefined(modifyId);\n  const isError = useSelector(voteWriteSelector.selectError);\n  const isSaved = useSelector(voteWriteSelector.selectSaved);\n\n  const handleSaveVote = () => {\n    dispatch(voteWriteAction.saveVoteData({ isModify }));\n  };\n\n  useEffect(() => {\n    if (isSaved) {\n      push(\"/list\");\n    } else if (isError) {\n    }\n  }, [push, isError, isSaved]);\n\n  const setModifyData = useCallback(\n    (modifyId: string) => {\n      dispatch(voteWriteAction.getVoteData({ voteId: modifyId }));\n    },\n    [dispatch]\n  );\n\n  const setInitData = useCallback(() => {\n    dispatch(voteWriteAction.setVoteData());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isModify) {\n      // NOTI: 수정이면 기존 데이터를 불러들임\n      setModifyData(modifyId);\n    } else {\n      // NOTI: 신규면 초기화 데이터를 불러들임\n      setInitData();\n    }\n    // NOTI: 컴포넌트 종료시 데이터 초기화\n    return () => {\n      setInitData();\n    };\n  }, [dispatch, isModify, modifyId, setModifyData, setInitData]);\n\n  return (\n    <Fragment>\n      <ButtonGroupStyle>\n        <em>{isError && \"😅 모든 항목을 입력해주세요.\"}</em>\n        <Button onClick={handleSaveVote}>투표 저장</Button>\n      </ButtonGroupStyle>\n\n      <VoteWrite />\n    </Fragment>\n  );\n}\n\nconst ButtonGroupStyle = styled.div`\n  display: flex;\n  justify-content: space-between;\n  > em {\n    color: #e64848;\n  }\n`;\n","import { ReactElement } from \"react\";\nimport { Router, Switch, Redirect, Route } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nimport { Header, Contents, Footer } from \"../features/layout\";\nimport { VoteListPage } from \"../features/voteList\";\nimport { VoteWritePage } from \"../features/voteWrite\";\n\nconst history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\n\nexport default function Routes(): ReactElement {\n  return (\n    <Router history={history}>\n      <Header />\n      <Contents>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/list\" />\n          </Route>\n          <Route path=\"/list\" exact component={VoteListPage} />\n\n          <Route path=\"/create\" exact component={VoteWritePage} />\n          <Route path=\"/modify/:vote_id\" exact component={VoteWritePage} />\n        </Switch>\n      </Contents>\n      <Footer />\n    </Router>\n  );\n}\n","import { ReactElement, useEffect } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { CommAPI } from \"../api/sample.api\";\n\nimport Routes from \"../routes/Routes\";\n\nfunction App(): ReactElement {\n  useEffect(() => {\n    // NOTI: 임시 API사용으로 최초 진입 시 세션에 데이터 별도 세팅\n    CommAPI.setInitData();\n  }, []);\n\n  return (\n    <WrapStyle>\n      <Routes />\n    </WrapStyle>\n  );\n}\n\nexport default App;\n\nconst WrapStyle = styled.div`\n  height: 100%;\n`;\n","import { configureStore, Action } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"@reduxjs/toolkit\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { useDispatch } from \"react-redux\";\n\nimport { voteListReducer } from \"../features/voteList\";\nimport { voteWriteReducer } from \"../features/voteWrite\";\n\nexport const rootReducer = combineReducers({\n  voteListReducer,\n  voteWriteReducer,\n});\n\nexport type IRootState = ReturnType<typeof rootReducer>;\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport type AppThunk = ThunkAction<void, IRootState, null, Action<string>>;\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/css/reset.css\";\n\nimport App from \"./core/App\";\nimport store from \"./core/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}